{"version":3,"file":"main.58bb64cdc09039fa.js","mappings":"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","sources":["./src/app/_helpers/http.interceptor.ts","./src/app/_services/auth.service.ts","./src/app/_services/load.service.ts","./src/app/_services/remove.service.service.ts","./src/app/_services/storage.service.ts","./src/app/_services/submit.service.ts","./src/app/_services/user.service.ts","./src/app/_shared/event-bus.service.ts","./src/app/_shared/event.class.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/board-admin/board-admin.component.ts","./src/app/board-admin/board-admin.component.html","./src/app/board-moderator/board-moderator.component.ts","./src/app/board-moderator/board-moderator.component.html","./src/app/board-user/board-user.component.ts","./src/app/board-user/board-user.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/fc.pipe.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { StorageService } from '../_services/storage.service';\r\nimport { EventBusService } from '../_shared/event-bus.service';\r\nimport { EventData } from '../_shared/event.class';\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n  private isRefreshing = false;\r\n\r\n  constructor(private storageService: StorageService, private eventBusService: EventBusService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    req = req.clone({\r\n      withCredentials: true,\r\n    });\r\n\r\n    return next.handle(req).pipe(\r\n      catchError((error) => {\r\n        // logout when token is expired\r\n/*\r\n        if (\r\n          error instanceof HttpErrorResponse &&\r\n          !req.url.includes('auth/signin') &&\r\n          error.status === 401\r\n        ) {\r\n          return this.handle401Error(req, next);\r\n        }\r\n*/\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n\r\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\r\n    if (!this.isRefreshing) {\r\n      this.isRefreshing = true;\r\n\r\n      if (this.storageService.isLoggedIn()) {\r\n        this.eventBusService.emit(new EventData('logout', null));\r\n      }\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true },\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n  const AUTH_API = 'http://localhost:8080/api/auth/';\r\nconst USER_KEY='USER '\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n// window.sessionStorage.setItem(USER_KEY, JSON.stringify(userData));\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // isAuthenticated():boolean\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(\r\n      AUTH_API + 'signin',\r\n      {\r\n        username,\r\n        password,\r\n      },  \r\n      {\r\n        observe: 'response', // This ensures the complete HTTP response is returned\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      }\r\n      \r\n    )\r\n  ;}\r\n\r\n  loggedIn(){\r\n    return !!window.sessionStorage.getItem('token')\r\n    }\r\n\r\n  register(username: string, email: string, password: string): Observable<any> {\r\n    return this.http.post(\r\n      AUTH_API + 'signup',\r\n      {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  logout(): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signout', { }, httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadService {\n  private apiUrl = 'http://localhost:8080/api/users';\n  constructor(private http: HttpClient) { }\n\n  getUserProfile(userId: any): Observable<any> {\n    return this.http.get(`${this.apiUrl}/${userId}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\nconst AUTH_API = 'http://localhost:8080/api/auth/';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RemoveServiceService {\nconstructor(private http: HttpClient) { }\n\nremove(timer:any):Observable<any>{\n\n  return this.http.delete(\n    AUTH_API + 'remove',\n  {\n    body:timer\n  }\n  )\n\n}\n  \n}\n","import { Injectable } from '@angular/core';\r\n\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageService {\r\n  constructor() {}\r\n\r\n  clean(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveUser(user: any): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(user);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = window.sessionStorage.getItem('token');\r\n    if (user) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\nconst AUTH_API = 'http://localhost:8080/api/auth/';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubmitService {\n\n  constructor(private http: HttpClient) { }\n  \n  submit(timer:any):Observable<any> {\n    \n    return this.http.post(\n      AUTH_API + 'submit',\n      {\n      timer\n    },\n    httpOptions\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst API_URL = 'http://localhost:8080/api/test/';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPublicContent(): Observable<any> {\r\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\r\n  }\r\n\r\n  getUserBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\r\n  }\r\n  \r\n  getModeratorBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\r\n  }\r\n\r\n  getAdminBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { EventData } from './event.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EventBusService {\r\n  private subject$ = new Subject<EventData>();\r\n\r\n  emit(event: EventData) {\r\n    this.subject$.next(event);\r\n  }\r\n\r\n  on(eventName: string, action: any): Subscription {\r\n    return this.subject$.pipe(\r\n      filter((e: EventData) => e.name === eventName),\r\n      map((e: EventData) => e[\"value\"])).subscribe(action);\r\n  }\r\n}\r\n","export class EventData {\r\n  name: string;\r\n  value: any;\r\n\r\n  constructor(name: string, value: any) {\r\n    this.name = name;\r\n    this.value = value;\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\r\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\r\nimport { authGuard } from './auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: `profile/:username` , component: ProfileComponent, canActivate:[authGuard] },\r\n  { path: 'user', component: BoardUserComponent },\r\n  { path: 'mod', component: BoardModeratorComponent },\r\n  { path: 'admin', component: BoardAdminComponent },\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{\r\n    useHash:true\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { StorageService } from './_services/storage.service';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { EventBusService } from './_shared/event-bus.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  private roles: string[] = [];\r\n  isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username?: string;\r\n\r\n  eventBusSub?: Subscription;\r\n  title: any;\r\n\r\n  constructor(\r\n    private storageService: StorageService,\r\n    private authService: AuthService,\r\n    private eventBusService: EventBusService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = this.storageService.isLoggedIn();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.storageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\r\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\r\n\r\n      this.username = user.username;\r\n    }\r\n\r\n    this.eventBusSub = this.eventBusService.on('logout', () => {\r\n      this.logout();\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout().subscribe({\r\n      next: res => {\r\n        console.log(res);\r\n        this.storageService.clean();\r\n\r\n        window.location.reload();\r\n      },\r\n      error: err => {\r\n        console.log(err);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div id=\"app\">\r\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n    <a href=\"#\" class=\"navbar-brand\">Clocky</a>\r\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\r\n        <a href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showModeratorBoard\">\r\n        <a href=\"/mod\" class=\"nav-link\" routerLink=\"mod\">Moderator Board</a>\r\n      </li>\r\n      <!-- <li class=\"nav-item\" *ngIf=\"showUserBoard\"> -->\r\n        \r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/profile/:username\" class=\"nav-link\" routerLink=\"profile/:username\">{{ username }}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"home\" class=\"nav-link\" (click)=\"logout()\">LogOut</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\r\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\n\r\nimport { httpInterceptorProviders } from './_helpers/http.interceptor';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormControlPipe } from './login/fc.pipe';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    // ProfileComponent,\r\n    BoardAdminComponent,\r\n    BoardModeratorComponent,\r\n    BoardUserComponent,\r\n    FormControlPipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    ProfileComponent\r\n  ],\r\n  providers: [httpInterceptorProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { AuthService } from './_services/auth.service'; \n\nexport const authGuard: CanActivateFn = (route, state) => {\n\n  const currentmenu = route.url[0].path;\n  const router = inject(Router);\n  const service = inject(AuthService);\n\n  if (service.loggedIn()) {\n    return true;\n    // if (currentmenu == 'blog') {\n    //   return true;\n    // } else {\n    //   alert('access denied');\n    //   router.navigate(['']);\n    //   return false;\n    // }\n  } else {\n    alert('access denied');\n    router.navigate(['login']);\n    return false;\n  }\n};","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-admin',\r\n  templateUrl: './board-admin.component.html',\r\n  styleUrls: ['./board-admin.component.css']\r\n})\r\nexport class BoardAdminComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAdminBoard().subscribe({\r\n      next: data => {\r\n        this.content = data;\r\n      },\r\n      error: err => {\r\n        if (err.error) {\r\n          try {\r\n            const res = JSON.parse(err.error);\r\n            this.content = res.message;\r\n          } catch {\r\n            this.content = `Error with status: ${err.status} - ${err.statusText}`;\r\n          }\r\n        } else {\r\n          this.content = `Error with status: ${err.status}`;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-moderator',\r\n  templateUrl: './board-moderator.component.html',\r\n  styleUrls: ['./board-moderator.component.css']\r\n})\r\nexport class BoardModeratorComponent  {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getModeratorBoard().subscribe({\r\n      next: data => {\r\n        this.content = data;\r\n      },\r\n      error: err => {\r\n        if (err.error) {\r\n          try {\r\n            const res = JSON.parse(err.error);\r\n            this.content = res.message;\r\n          } catch {\r\n            this.content = `Error with status: ${err.status} - ${err.statusText}`;\r\n          }\r\n        } else {\r\n          this.content = `Error with status: ${err.status}`;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-user',\r\n  templateUrl: './board-user.component.html',\r\n  styleUrls: ['./board-user.component.css']\r\n})\r\nexport class BoardUserComponent {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUserBoard().subscribe({\r\n      next: data => {\r\n        this.content = data;\r\n      },\r\n      error: err => {\r\n        if (err.error) {\r\n          try {\r\n            const res = JSON.parse(err.error);\r\n            this.content = res.message;\r\n          } catch {\r\n            this.content = `Error with status: ${err.status} - ${err.statusText}`;\r\n          }\r\n        } else {\r\n          this.content = `Error with status: ${err.status}`;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getPublicContent().subscribe({\r\n      next: data => {\r\n        this.content = data;\r\n      },\r\n      error: err => {\r\n        if (err.error) {\r\n          try {\r\n            const res = JSON.parse(err.error);\r\n            this.content = res.message;\r\n          } catch {\r\n            this.content = `Error with status: ${err.status} - ${err.statusText}`;\r\n          }\r\n        } else {\r\n          this.content = `Error with status: ${err.status}`;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AbstractControl, FormControl } from '@angular/forms';\r\n\r\n@Pipe({\r\n    name: 'formControl',\r\n})\r\nexport class FormControlPipe implements PipeTransform {\r\n    transform(value: AbstractControl): FormControl<typeof value['value']> \r\n    {\r\n    return value as FormControl<typeof value['value']>;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { StorageService } from '../_services/storage.service';\r\nimport {Router, ActivatedRoute} from '@angular/router'; \r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport { FormBuilder, FormControl, FormGroup, \r\n  Validators } from '@angular/forms';\r\nimport { FormControlPipe  } from './fc.pipe';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent  {\r\n  loginForm!:FormGroup\r\n  \r\n  isSubmitted = false;\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  roles: string[] = [];\r\n\r\n  constructor(private authService: AuthService, \r\n    private storageService: StorageService, \r\n    private route:ActivatedRoute, \r\n    private router: Router, \r\n    private formbuilder:FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formbuilder.group({\r\n      username: new FormControl('', Validators.required),\r\n      password:new FormControl('', Validators.required)\r\n    });\r\n    \r\n  }\r\n  get fc() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  \r\n\r\n  Onsubmit(): void {\r\n    // const { username, password } = this.form;\r\n    \r\n  const username = this.loginForm.get('username')?.value;\r\n  const password = this.loginForm.get('password')?.value\r\n  \r\n  if (username && password){\r\n    this.authService.login(\r\n      username, password\r\n    ).subscribe(\r\n      {\r\n\r\n      next: Response => {\r\n        console.log(Response.body);\r\n        const token = Response.body.token;\r\n        const username = Response.body.username;\r\n        this.storageService.saveUser(Response);\r\n        // const token = this.storageService.getUser().token;\r\n        // const userId = this.storageService.getUser().id;\r\n        \r\n        window.sessionStorage.setItem('token',token);\r\n        window.sessionStorage.setItem('username',username);\r\n        console.log(window.sessionStorage);\r\n        // window.sessionStorage.setItem('id',userId);\r\n        // const ID = window.sessionStorage.getItem('id');\r\n        // console.log(userId);\r\n        console.log(Response.username);\r\n        // console.log(ID);\r\n        console.log(this.route.snapshot);\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.storageService.getUser().roles;\r\n        console.log('nice!');\r\n        this.router.navigate(['/profile', username]);\r\n        \r\n        // this.router.navigate(['register'], { relativeTo: this.route })  \r\n        \r\n      },\r\n      error: err => {\r\n        // this.errorMessage = err.error.message;\r\n        this.isLoginFailed = true;\r\n        console.log('error');\r\n        console.log(username);\r\n      },\r\n      \r\n    });\r\n\r\n  }\r\n  else{\r\n    this.isLoginFailed = true;\r\n    this.isLoggedIn = false;\r\n    console.log('error');\r\n    console.log(username);\r\n  }\r\n      }\r\n\r\n  // profile_redirect(): void{\r\n  //   if (this.isLoggedIn = true){\r\n  //     this.router.navigate([`/profile`,this.fc['username'].value]);\r\n  //     console.log(\"checking...\");\r\n  //   }\r\n  // }\r\n\r\n  \r\n\r\n  reloadPage(): void {\r\n    window.location.reload();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"details\">\r\n    <title>Login</title>\r\n\r\n    <form [formGroup]=\"loginForm\" id=\"myForm\" (ngSubmit)=\"Onsubmit()\"\r\n    defa>\r\n\r\n    <input\r\n    type=\"text\"\r\n    label=\"username\"\r\n    placeholder=\"enter username\"\r\n    formControlName=\"username\">\r\n  \r\n  <input\r\n  type=\"password\"\r\n  label=\"password\"\r\n  placeholder=\"enter password\"\r\n  formControlName=\"password\"\r\n  >\r\n\r\n\r\n    <button type=\"submit\"\r\n    >Login</button>\r\n    <div class=\"register\">\r\n      \r\n      <a routerLink=\"/register\" >\r\n        New user? Register here\r\n      </a>\r\n    </div>\r\n    </form>\r\n  </div>\r\n</div>","import { JsonPipe, NgFor } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder, FormsModule, ReactiveFormsModule,\r\n   FormControl, FormGroup } from '@angular/forms';\r\nimport { Validators, ValidatorFn } from '@angular/forms';\r\nimport { FormArray, AbstractControl } from '@angular/forms';\r\nimport { OnInit } from '@angular/core';\r\nimport { SubmitService } from '../_services/submit.service';\r\nimport { StorageService } from '../_services/storage.service';\r\nimport { RemoveServiceService } from '../_services/remove.service.service';\r\nimport { LoadService } from '../_services/load.service';\r\n// import { timer } from 'rxjs';\r\n\r\n@Component({\r\n  standalone:true,\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n  imports: [NgFor, ReactiveFormsModule, JsonPipe],\r\n  \r\n})\r\nexport class ProfileComponent implements OnInit{\r\n  profileForm!: FormGroup;\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.profileForm = this.formBuilder.group({\r\n      newforms: this.formBuilder.array<FormGroup>([])\r\n    });\r\n    \r\n    const userId = this.storageService.getUser().body.id;\r\n    console.log(userId);\r\n    if (userId){\r\n     const loaded = this.loadservice.getUserProfile(userId).subscribe\r\n     (\r\n      {\r\n        next: Response =>{\r\n          console.log(Response)\r\n          for (const timers of Response ){\r\n            \r\n          let old_timer = this.formBuilder.group(\r\n            {URL: timers.URL ,\r\n            hours: timers.hours,\r\n            minutes:timers.minutes,\r\n            seconds:timers.seconds\r\n            } \r\n          )\r\n          this.newforms.push(old_timer);\r\n          }\r\n        },\r\n        error: err =>{\r\n          console.log('somethings wrong');\r\n        }\r\n      }\r\n     )\r\n      \r\n    }\r\n    \r\n  }\r\n \r\n\r\n  get newforms(){\r\n    return this.profileForm.get('newforms') as FormArray;\r\n  }\r\n\r\n  constructor(private formBuilder: FormBuilder, private submitservice: SubmitService, \r\n    private removeservice: RemoveServiceService, private storageService: StorageService\r\n    ,private loadservice : LoadService) {}\r\n\r\n  // updateProfile() {\r\n  //   this.profileForm.patchValue({\r\n  //     firstName: 'Nancy',\r\n  //     address: {\r\n  //       street: '123 Drew Street',\r\n  //     },\r\n  //   });\r\n  // }\r\n\r\n\r\n  addforms(){\r\n    const urlPattern = /^(https?:\\/\\/)?([a-z0-9-]+\\.)?[a-z0-9-]+\\.[a-z]{2,}\\/?.*$/i;\r\n\r\n    interface FormGroupConfig {\r\n      [controlName: string]: [any, ValidatorFn[]];\r\n    }\r\n\r\n    let timer = this.formBuilder.group(\r\n      {URL: ['', Validators.pattern(urlPattern)],\r\n      hours:['', [Validators.required, Validators.min(0)]],\r\n      minutes:['', [Validators.required, Validators.min(0), Validators.max(59)]],\r\n      seconds:['', [Validators.required, Validators.min(0), Validators.max(59)]]\r\n      } \r\n    )\r\n      \r\n    // const timerJson = JSON.stringify(timer.value);\r\n    this.newforms.push(timer);\r\n\r\n  }\r\n\r\n  // serializeFormGroup(formGroup: FormGroup): string {\r\n  //   const controls = formGroup.controls;\r\n  //   const serializedForm: SerializedFormGroup = {};\r\n  \r\n  //   // Iterate over each control in the FormGroup\r\n  //   Object.keys(controls).forEach(key => {\r\n  //     const control = controls[key];\r\n  \r\n  //     // Serialize the control's validators\r\n  //     const validators: { [key: string]: any } = {};\r\n  //     if (control.validator) {\r\n  //       Object.keys(control.validator(control)).forEach(validatorKey => {\r\n  //         validators[validatorKey] = control.errors ? control.errors[validatorKey] : null;\r\n  //       });\r\n  //     }\r\n  \r\n  //     // Include the control's value and validators in the serialized form\r\n  //     serializedForm[key] = {\r\n  //       value: control.value,\r\n  //       validators: Object.keys(validators).length > 0 ? validators : null\r\n  //     };\r\n  //   });\r\n  \r\n  //   // Convert the serialized form to JSON\r\n  //   return JSON.stringify(serializedForm, null, 2); // Adding null and 2 for pretty printing\r\n  // }\r\n\r\n  getTimer(index: number): FormGroup {\r\n    return this.newforms.at(index) as FormGroup;\r\n  }\r\n\r\n  removeforms(index: number, newform: AbstractControl<any, any>) {\r\n    const formGroup = newform as FormGroup;\r\n    console.log(formGroup.value);\r\n    if(formGroup.value.URL){\r\n      console.log('aight');\r\n      this.removeservice.remove(formGroup.value).\r\n      subscribe({\r\n        next:Response => {\r\n          console.log('Delete request successful'); // Log success message\r\n      },\r\n      error: err => {\r\n          console.error('Delete request failed:', err); // Log error message\r\n      }\r\n    })\r\n    }\r\n    else{\r\n      console.log('nah');\r\n    }\r\n    this.newforms.removeAt(index);\r\n  }\r\n  onSubmit(newform: AbstractControl<any, any>) {\r\n    // TODO: Use EventEmitter with form value\r\n    const formGroup = newform as FormGroup;\r\n    // const json_timer=this.newforms.at(this.newforms.length-1).value;\r\n    // const real_json = JSON.parse(json_timer);\r\n    this.submitservice.submit(formGroup.value)\r\n    .subscribe({\r\n      \r\n    })\r\n    console.warn(this.profileForm.value);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","<form [formGroup]=\"profileForm\" >\r\n  \r\n  \r\n  <div formArrayName=\"newforms\">\r\n\r\n    \r\n    <div *ngFor=\"let newform of newforms.controls; let i = index\">\r\n      <div [formGroupName]=\"i\">\r\n\r\n        <label for=\"street\">URL: </label>\r\n        <input id=\"URL\" type=\"text\" formControlName=\"URL\">\r\n\r\n\r\n        <label>hours:</label>\r\n        <input formControlName=\"hours\" />\r\n\r\n        <label>minutes:</label>\r\n        <input formControlName=\"minutes\" />\r\n\r\n        <label>seconds:</label>\r\n        <input formControlName=\"seconds\" />\r\n\r\n        \r\n      </div>\r\n      \r\n  <button type=\"submit\" [disabled]=\"!newform.valid\" (click)=\"onSubmit(newform)\">Submit</button>\r\n  <button type=\"button\" (click)=\"removeforms(i, newform)\">Remove form</button>\r\n    \r\n    </div>\r\n  </div>\r\n\r\n  \r\n  <button type=\"button\" (click)=\"addforms()\">Add form</button>\r\n\r\n  \r\n\r\n\r\n  <p>Complete the form to enable button.</p>\r\n</form>\r\n\r\n<hr>\r\n\r\n<p>Form Value: {{ profileForm.value | json }}</p>\r\n\r\n<p>Form Status: {{ profileForm.status }}</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n  form: any = {\r\n    username: null,\r\n    email: null,\r\n    password: null\r\n  };\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  onSubmit(): void {\r\n    const { username, email, password } = this.form;\r\n\r\n    this.authService.register(username, email, password).subscribe({\r\n      next: data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      error: err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"col-md-12\">\r\n  <div class=\"card card-container\">\r\n    <img\r\n      id=\"profile-img\"\r\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n      class=\"profile-img-card\"\r\n    />\r\n    <form\r\n      *ngIf=\"!isSuccessful\"\r\n      name=\"form\"\r\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n      #f=\"ngForm\"\r\n      novalidate\r\n    >\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          name=\"username\"\r\n          [(ngModel)]=\"form.username\"\r\n          required\r\n          minlength=\"3\"\r\n          maxlength=\"20\"\r\n          #username=\"ngModel\"\r\n          [ngClass]=\"{ 'is-invalid': f.submitted && username.errors }\"\r\n        />\r\n        <div class=\"invalid-feedback\" *ngIf=\"username.errors && f.submitted\">\r\n          <div *ngIf=\"username.errors['required']\">Username is required</div>\r\n          <div *ngIf=\"username.errors['minlength']\">\r\n            Username must be at least 3 characters\r\n          </div>\r\n          <div *ngIf=\"username.errors['maxlength']\">\r\n            Username must be at most 20 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          name=\"email\"\r\n          [(ngModel)]=\"form.email\"\r\n          required\r\n          email\r\n          #email=\"ngModel\"\r\n          [ngClass]=\"{ 'is-invalid': f.submitted && email.errors }\"\r\n        />\r\n        <div class=\"invalid-feedback\" *ngIf=\"email.errors && f.submitted\">\r\n          <div *ngIf=\"email.errors['required']\">Email is required</div>\r\n          <div *ngIf=\"email.errors['email']\">\r\n            Email must be a valid email address\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          name=\"password\"\r\n          [(ngModel)]=\"form.password\"\r\n          required\r\n          minlength=\"6\"\r\n          #password=\"ngModel\"\r\n          [ngClass]=\"{ 'is-invalid': f.submitted && password.errors }\"\r\n        />\r\n        <div class=\"invalid-feedback\" *ngIf=\"password.errors && f.submitted\">\r\n          <div *ngIf=\"password.errors['required']\">Password is required</div>\r\n          <div *ngIf=\"password.errors['minlength']\">\r\n            Password must be at least 6 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\r\n      </div>\r\n\r\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n        Signup failed!<br />{{ errorMessage }}\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n      Please check your inbox for the registration confirmation mail\r\n    </div>\r\n  </div>\r\n</div>","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["HTTP_INTERCEPTORS","throwError","catchError","EventData","HttpRequestInterceptor","constructor","storageService","eventBusService","isRefreshing","intercept","req","next","clone","withCredentials","handle","pipe","error","handle401Error","request","isLoggedIn","emit","i0","ɵɵinject","i1","StorageService","i2","EventBusService","factory","ɵfac","httpInterceptorProviders","provide","useClass","multi","HttpHeaders","AUTH_API","USER_KEY","httpOptions","headers","AuthService","http","login","username","password","post","observe","loggedIn","window","sessionStorage","getItem","register","email","logout","HttpClient","providedIn","LoadService","apiUrl","getUserProfile","userId","get","RemoveServiceService","remove","timer","delete","body","clean","clear","saveUser","user","removeItem","setItem","JSON","stringify","getUser","parse","SubmitService","submit","API_URL","UserService","getPublicContent","responseType","getUserBoard","getModeratorBoard","getAdminBoard","Subject","filter","map","subject$","event","on","eventName","action","e","name","subscribe","value","RouterModule","RegisterComponent","LoginComponent","HomeComponent","ProfileComponent","BoardUserComponent","BoardModeratorComponent","BoardAdminComponent","authGuard","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","useHash","imports","exports","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_ul_11_Template_a_click_5_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","ɵɵadvance","ɵɵtextInterpolate","ctx_r3","AppComponent","authService","roles","showAdminBoard","showModeratorBoard","ngOnInit","includes","eventBusSub","res","console","log","location","reload","err","ɵɵdirectiveInject","i3","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_li_8_Template","AppComponent_li_9_Template","AppComponent_ul_10_Template","AppComponent_ul_11_Template","ɵɵelement","ɵɵproperty","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","BrowserAnimationsModule","FormControlPipe","AppModule","bootstrap","declarations","inject","Router","route","state","currentmenu","url","router","service","alert","navigate","userService","data","content","message","status","statusText","BoardAdminComponent_Template","BoardModeratorComponent_Template","BoardUserComponent_Template","HomeComponent_Template","transform","pure","FormControl","Validators","formbuilder","isSubmitted","isLoginFailed","errorMessage","loginForm","group","required","fc","controls","Onsubmit","Response","token","snapshot","reloadPage","ActivatedRoute","i4","FormBuilder","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_4_listener","JsonPipe","NgFor","ProfileComponent_div_2_Template_button_click_14_listener","restoredCtx","_r4","newform_r1","$implicit","onSubmit","ProfileComponent_div_2_Template_button_click_16_listener","i_r2","index","ctx_r5","removeforms","valid","profileForm","formBuilder","newforms","array","id","loaded","loadservice","timers","old_timer","URL","hours","minutes","seconds","push","submitservice","removeservice","addforms","urlPattern","pattern","min","max","getTimer","at","newform","formGroup","removeAt","warn","i5","standalone","features","ɵɵStandaloneFeature","ProfileComponent_Template","ProfileComponent_div_2_Template","ProfileComponent_Template_button_click_3_listener","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","FormGroupName","FormArrayName","styles","RegisterComponent_form_3_div_7_div_1_Template","RegisterComponent_form_3_div_7_div_2_Template","RegisterComponent_form_3_div_7_div_3_Template","_r3","errors","RegisterComponent_form_3_div_13_div_1_Template","RegisterComponent_form_3_div_13_div_2_Template","RegisterComponent_form_3_div_19_div_1_Template","RegisterComponent_form_3_div_19_div_2_Template","_r7","ctx_r9","RegisterComponent_form_3_Template_form_ngSubmit_0_listener","_r18","_r2","ɵɵreference","ctx_r17","form","RegisterComponent_form_3_Template_input_ngModelChange_5_listener","$event","ctx_r19","RegisterComponent_form_3_div_7_Template","RegisterComponent_form_3_Template_input_ngModelChange_11_listener","ctx_r20","RegisterComponent_form_3_div_13_Template","RegisterComponent_form_3_Template_input_ngModelChange_17_listener","ctx_r21","RegisterComponent_form_3_div_19_Template","RegisterComponent_form_3_div_23_Template","ctx_r0","ɵɵpureFunction1","_c0","submitted","isSignUpFailed","isSuccessful","RegisterComponent_Template","RegisterComponent_form_3_Template","RegisterComponent_div_4_Template","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}